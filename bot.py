# bot.py
import telebot
import mysql.connector
from datetime import datetime
import config

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = telebot.TeleBot(config.BOT_TOKEN)


# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
def get_db_connection():
    return mysql.connector.connect(
        host=config.DB_HOST,
        user=config.DB_USER,
        password=config.DB_PASSWORD,
        database=config.DB_NAME
    )


# –ö–æ–º–∞–Ω–¥–∞ /start ‚Äî –≥–ª–∞–≤–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏ –≤—Ö–æ–¥
@bot.message_handler(commands=['start'])
def send_welcome(message):
    user_id = str(message.from_user.id)

    try:
        conn = get_db_connection()
        cursor = conn.cursor()

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Ç–∞–±–ª–∏—Ü–µ employees –ø–æ telegram_id
        cursor.execute("""
            SELECT e.full_name 
            FROM employees e 
            WHERE e.telegram_id = %s 
        """, (user_id,))
        employee = cursor.fetchone()

        if not employee:
            # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω
            conn.close()
            bot.reply_to(
                message,
                f"üëã –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {message.from_user.first_name}!\n\n"
                "–í–∞—à Telegram-–∞–∫–∫–∞—É–Ω—Ç <b>–Ω–µ –ø—Ä–∏–≤—è–∑–∞–Ω</b> –∫ –Ω–∞—à–µ–π –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.\n\n"
                "–ß—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –¥–æ—Å—Ç—É–ø:\n"
                "–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É\n"
                "üì¨ <b>–ö–æ–Ω—Ç–∞–∫—Ç—ã:</b>\n"
                "üìû <code>+7 (495) 123-45-67</code>\n"
                "üìß <code>ep-support@company.local</code>",
                parse_mode='HTML'
            )
            return

        full_name = employee[0]
        conn.close()

        # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω ‚Äî —Å—Ç—Ä–æ–∏–º –º–µ–Ω—é
        keyboard = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn_status = telebot.types.KeyboardButton("üîê –ú–æ–π —Å—Ç–∞—Ç—É—Å")
        btn_help = telebot.types.KeyboardButton("‚ùì –ü–æ–º–æ—â—å")
        keyboard.add(btn_status, btn_help)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ —Å –º–µ–Ω—é
        bot.reply_to(
            message,
            f"üëã –ü—Ä–∏–≤–µ—Ç, <b>{message.from_user.first_name}</b>!\n"
            f"–í—ã –≤–æ—à–ª–∏ –∫–∞–∫ <b>{full_name}</b>.\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ –≤ –º–µ–Ω—é –Ω–∏–∂–µ.",
            reply_markup=keyboard,
            parse_mode='HTML'
        )

    except Exception as e:
        bot.reply_to(
            message,
            "‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–∏ –∫ —Å–∏—Å—Ç–µ–º–µ.\n"
            "–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ –∏–ª–∏ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
        )
        print(f"[ERROR] –û—à–∏–±–∫–∞ –≤ /start: {e}")


# –ö–æ–º–∞–Ω–¥–∞ /help
@bot.message_handler(commands=['help'])
def send_help(message):
    help_text = (
        "üìå <b>–°–ø—Ä–∞–≤–∫–∞ –ø–æ –±–æ—Ç—É</b>\n\n"
        "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
        "üî∏ /start ‚Äî –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é\n"
        "üî∏ /status ‚Äî —Å—Ç–∞—Ç—É—Å –≤–∞—à–µ–≥–æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞\n"
        "üî∏ /help ‚Äî —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ\n\n"
        "üì¨ <b>–ö–æ–Ω—Ç–∞–∫—Ç—ã:</b>\n"
        "üì± –¢–µ–ª–µ—Ñ–æ–Ω: <code>+7 (495) 123-45-67</code>\n"
        "üìß Email: <code>ep-support@company.local</code>\n"
        "üë§ Telegram: <a href='https://t.me/@deeanahhh'>@deeanahhh</a>"
    )
    bot.send_message(message.chat.id, help_text, parse_mode='HTML')


# –ö–æ–º–∞–Ω–¥–∞ /status
@bot.message_handler(commands=['status'])
def send_status(message):
    user_id = str(message.from_user.id)
    try:
        conn = get_db_connection()
        cursor = conn.cursor(dictionary=True)
        cursor.execute("""
            SELECT e.full_name, e.position, c.serial_number, c.valid_to, c.status, c.certificate_type
            FROM certificates c
            JOIN employees e ON c.employee_id = e.id
            WHERE e.telegram_id = %s
            ORDER BY c.valid_to DESC
        """, (user_id,))
        results = cursor.fetchall()
        conn.close()

        if results:
            response = "üîê <b>–°—Ç–∞—Ç—É—Å —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–µ–π</b>\n\n"
            for idx, result in enumerate(results, start=1):
                days_left = (result['valid_to'].date() - datetime.now().date()).days
                status_text = "üü¢ –ê–∫—Ç–∏–≤–µ–Ω" if days_left > 0 else "üî¥ –ü—Ä–æ—Å—Ä–æ—á–µ–Ω"
                expiring = " ‚ö†Ô∏è –°—Ä–æ–∫ –∏—Å—Ç–µ–∫–∞–µ—Ç!" if 0 < days_left <= 7 else ""

                response += (
                    f"<u>–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç {idx}</u>\n"
                    f"üë§ <b>–§–ò–û:</b> {result['full_name']}\n"
                    f"üíº <b>–î–æ–ª–∂–Ω–æ—Å—Ç—å:</b> {result['position']}\n"
                    f"üî¢ <b>–°–µ—Ä–∏–π–Ω—ã–π –Ω–æ–º–µ—Ä:</b> <code>{result['serial_number']}</code>\n"
                    f"üìÜ <b>–î–µ–π—Å—Ç–≤—É–µ—Ç –¥–æ:</b> {result['valid_to'].strftime('%d.%m.%Y')}\n"
                    f"‚è≥ <b>–û—Å—Ç–∞–ª–æ—Å—å –¥–Ω–µ–π:</b> {days_left}\n"
                    f"üîñ <b>–¢–∏–ø:</b> {result['certificate_type']}\n"
                    f"‚úÖ <b>–°—Ç–∞—Ç—É—Å:</b> {status_text}{expiring}\n\n"
                )

            bot.send_message(message.chat.id, response, parse_mode='HTML', disable_web_page_preview=True)
        else:
            bot.send_message(
                message.chat.id,
                "‚ùå –í–∞—à–∏ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ.\n"
                "–í–æ–∑–º–æ–∂–Ω–æ, –≤–∞—à –∞–∫–∫–∞—É–Ω—Ç –Ω–µ –∏–º–µ–µ—Ç –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã—Ö —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤.\n"
                "–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É."
            )
    except Exception as e:
        bot.send_message(message.chat.id, f"‚ùå –û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {str(e)}")


# –ö–æ–º–∞–Ω–¥–∞ /admin_panel (–∏ –∫–Ω–æ–ø–∫–∞)
@bot.message_handler(commands=['admin_panel'])
def admin_panel_command(message):
    show_admin_panel(message)

@bot.message_handler(func=lambda message: message.text == "‚öôÔ∏è –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å")
def admin_panel_button(message):
    show_admin_panel(message)

def show_admin_panel(message):
    user_id = str(message.from_user.id)
    try:
        conn = get_db_connection()
        cursor = conn.cursor()
        cursor.execute("SELECT role FROM users WHERE telegram_id = %s", (user_id,))
        result = cursor.fetchone()
        conn.close()

        if result and result[0] == 'admin':
            web_panel_url = "http://127.0.0.1:5000"
            login = config.PANEL_LOGIN  
            password = config.PANEL_PASSWORD

            admin_message = (
                "üõ°Ô∏è <b>–î–æ—Å—Ç—É–ø –∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏</b>\n\n"
                f"üåê <b>–°—Å—ã–ª–∫–∞:</b> <a href='{web_panel_url}'>–ü–µ—Ä–µ–π—Ç–∏ –∫ –ø–∞–Ω–µ–ª–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è</a>\n"
                f"üîë <b>–õ–æ–≥–∏–Ω:</b> <tg-spoiler>{login}</tg-spoiler>\n"
                f"üîí <b>–ü–∞—Ä–æ–ª—å:</b> <tg-spoiler>{password}</tg-spoiler>\n\n"
                "‚ö†Ô∏è –ù–µ –ø–µ—Ä–µ–¥–∞–≤–∞–π—Ç–µ —ç—Ç–∏ –¥–∞–Ω–Ω—ã–µ —Ç—Ä–µ—Ç—å–∏–º –ª–∏—Ü–∞–º!"
            )
            bot.send_message(message.chat.id, admin_message, parse_mode='HTML')
        else:
            bot.send_message(
                message.chat.id,
                "üö´ –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏.\n"
                "–≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º."
            )
    except Exception as e:
        bot.send_message(message.chat.id, f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –¥–æ—Å—Ç—É–ø–∞: {str(e)}")


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫
@bot.message_handler(func=lambda message: message.text == "üîê –ú–æ–π —Å—Ç–∞—Ç—É—Å")
def button_status(message):
    send_status(message)

@bot.message_handler(func=lambda message: message.text == "‚ùì –ü–æ–º–æ—â—å")
def button_help(message):
    send_help(message)


# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
@bot.message_handler(func=lambda message: True)
def echo_message(message):
    bot.send_message(
        message.chat.id,
        "–Ø –Ω–µ –ø–æ–Ω—è–ª –∫–æ–º–∞–Ω–¥—É. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –º–µ–Ω—é –∏–ª–∏ –≤–≤–µ–¥–∏—Ç–µ /help."
    )


# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == '__main__':
    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω...")
    bot.infinity_polling()